[platformio]
;src_dir = examples/SPI/TestCommunication
;src_dir = examples/SPI/ReadGconf
;src_dir = examples/SPI/ReadChopconf
;src_dir = examples/SPI/ReadDefaults
;src_dir = examples/SPI/ReadEncoder
;src_dir = examples/SPI/GetStoredPwmconf
;src_dir = examples/SPI/TestStandstill
;src_dir = examples/SPI/TuneStealthChop
;src_dir = examples/SPI/TestVelocity
;src_dir = examples/SPI/TestPosition
;src_dir = examples/SPI/HomeToStall
;src_dir = examples/SPI/TestStepperInterfaceBoard
;src_dir = examples/SPI/TestPrismCommunication
;src_dir = examples/SPI/TestPrismVelocity

;src_dir = examples/UART/TestCommunication
;src_dir = examples/UART/ReadRegister
;src_dir = examples/UART/TestStandstill
;src_dir = examples/UART/TestVelocity
;src_dir = examples/UART/TestPosition
;src_dir = examples/UART/TestMultipleMotors

lib_dir = src
;default_envs = pico
default_envs = disco_f051r8
;default_envs = wraith32_v1

[common_env_data]
build_flags =
    -Isrc
lib_deps_builtin =
    SPI
# lib_deps_external =
lib_deps_local =
    src/TMC51X0

[env]
lib_ldf_mode = off
;lib_ldf_mode = deep
build_flags =
    ${common_env_data.build_flags}
monitor_echo = yes
monitor_eol = LF
monitor_filters =
    send_on_enter
    colorize
monitor_speed = 115200
lib_deps =
    ${common_env_data.lib_deps_builtin}
    # ${common_env_data.lib_deps_external}
    ${common_env_data.lib_deps_local}

[env:teensy40]
framework = arduino
platform = teensy
board = teensy40
upload_protocol = teensy-cli

[env:pico]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
board = rpipico
framework = arduino
board_build.core = earlephilhower
upload_protocol = picotool

[env:feather]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
board = adafruit_feather
framework = arduino
board_build.core = earlephilhower
upload_protocol = picotool

[env:esp32]
platform = espressif32
board = esp32dev
framework = arduino
upload_protocol = esptool

[env:disco_f051r8]
platform = ststm32
;platform = https://github.com/platformio/platform-ststm32.git
board = disco_f051r8
; change microcontroller
board_build.mcu = stm32f051r8t6
; change MCU frequency
board_build.f_cpu = 48000000L
framework = arduino
build_flags =
;    --verbose
    -D ARDUINO_ARCH_STM32
    -D ARDUINO_disco_f051r8
    -D EXTENDED_PIN_MODE
;    -D HAL_TIM_MODULE_ONLY
;    -D HAL_TIM_MODULE_ENABLED
;    -D TIMER_TONE
upload_protocol = stlink

[env:wraith32_v1]
platform = https://github.com/platformio/platform-ststm32.git
;platform = ststm32
board = wraith32_v1
; change microcontroller
board_build.mcu = stm32f051r8t6
; change MCU frequency
board_build.f_cpu = 48000000L
framework = arduino
build_flags =
    -D ARDUINO_ARCH_STM32
;    -D EXTENDED_PIN_MODE
;    -D HAL_TIM_MODULE_ENABLED
;    -D TIMER_TONE
upload_protocol = stlink

; pio run -e teensy40 --target upload --upload-port /dev/ttyACM0
; pio run -e teensy40 -t envdump
; pio device monitor
